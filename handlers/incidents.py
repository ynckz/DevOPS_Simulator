import time
import json
import asyncio
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from services import generate_incident, solve_incident
from utils.keyboards import get_incident_solutions_keyboard
from models import SessionMaker, Player, Skill
from services.maintenance_service import decrease_server_health
from services.daily_service import update_task_progress
from services.crisis_service import generate_random_crisis

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤
incident_router = Router()

# –í—Ä–µ–º–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_data = {}

@incident_router.message(F.text == 'üö® –ò–Ω—Ü–∏–¥–µ–Ω—Ç')
async def handle_incident(message: Message):
    user_id = message.from_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –ø—Ä–æ–∏–∑–æ—à–µ–ª –ª–∏ –∫—Ä–∏–∑–∏—Å
    crisis_result = await generate_random_crisis(user_id)
    
    if crisis_result:
        crisis, prevented = crisis_result
        
        if prevented:
            await message.answer(
                f"‚ö†Ô∏è *–ü–†–ï–î–û–¢–í–†–ê–©–ï–ù–û: {crisis.name}*\n\n"
                f"–ë–ª–∞–≥–æ–¥–∞—Ä—è –≤–∞—à–µ–π –±–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ö–æ—Ä–æ—à–µ–º—É –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥—É, —É–¥–∞–ª–æ—Å—å –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—Ç–∏—Ç—å –∫—Ä–∏–∑–∏—Å:\n"
                f"{crisis.description}\n\n"
                f"–í–∞—à–∏ –Ω–∞–≤—ã–∫–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –∏ –≤—ã—Å–æ–∫–∞—è —Ä–µ–ø—É—Ç–∞—Ü–∏—è –ø–æ–º–æ–≥–ª–∏ –≤–∞–º –∑–∞–º–µ—Ç–∏—Ç—å –∏ —Ä–µ—à–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É –∑–∞—Ä–∞–Ω–µ–µ!",
                parse_mode="Markdown"
            )
        else:
            severity_stars = "üî¥" * crisis.severity + "‚ö™" * (5 - crisis.severity)
            
            await message.answer(
                f"üö® *–ö–†–ò–ó–ò–°: {crisis.name}*\n\n"
                f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* {crisis.description}\n"
                f"‚ö†Ô∏è *–°–µ—Ä—å–µ–∑–Ω–æ—Å—Ç—å:* {severity_stars}\n\n"
                f"*–ü–æ—Å–ª–µ–¥—Å—Ç–≤–∏—è:*\n"
                f"- –ó–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å–Ω–∏–∑–∏–ª–æ—Å—å –Ω–∞ {crisis.server_damage}%\n"
                f"- –ü–æ—Ç–µ—Ä—è ${crisis.money_loss}\n"
                f"- –†–µ–ø—É—Ç–∞—Ü–∏—è —Å–Ω–∏–∑–∏–ª–∞—Å—å –Ω–∞ {crisis.reputation_loss} –ø—É–Ω–∫—Ç–æ–≤\n\n"
                f"–í–∞–º —Å–ª–µ–¥—É–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–µ–º–æ–Ω—Ç.",
                parse_mode="Markdown"
            )
            
            # –î–∞–µ–º –≤—Ä–µ–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∫—Ä–∏–∑–∏—Å–µ
            await asyncio.sleep(3)
    
    # –î–∞–ª–µ–µ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±—ã—á–Ω—ã–π –∏–Ω—Ü–∏–¥–µ–Ω—Ç
    incident = await generate_incident(user_id)
    
    if incident:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–∞ –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ –Ω–∞–≥—Ä–∞–¥—ã
        user_data[user_id] = {'incident_id': incident.id, 'start_time': time.time()}
        
        stars = "‚≠ê" * incident.difficulty + "‚òÜ" * (5 - incident.difficulty)
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –≤—Ä–µ–º–µ–Ω–∏, –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
        time_info = ""
        if incident.time_sensitive > 0:
            time_info = f"\n‚è± *–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:* {incident.time_sensitive} —Å–µ–∫—É–Ω–¥!"
        
        await message.answer(
            f"üö® *–ò–ù–¶–ò–î–ï–ù–¢: {incident.name}*\n\n"
            f"üìù *–û–ø–∏—Å–∞–Ω–∏–µ:* {incident.description}\n"
            f"üî• *–°–ª–æ–∂–Ω–æ—Å—Ç—å:* {stars}\n"
            f"üí∞ *–ë–∞–∑–æ–≤–∞—è –Ω–∞–≥—Ä–∞–¥–∞:* ${incident.reward}{time_info}\n\n"
            f"–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—à–µ–Ω–∏–µ:",
            parse_mode="Markdown",
            reply_markup=get_incident_solutions_keyboard(incident)
        )
    else:
        await message.answer("–°–µ–π—á–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

@incident_router.callback_query(F.data.startswith('solution_'))
async def handle_solution(call: CallbackQuery):
    user_id = call.from_user.id
    
    if user_id in user_data:
        incident_data = user_data[user_id]
        solution_time = time.time() - incident_data['start_time']
        incident_id = incident_data['incident_id']
        
        # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ –∏–∑ callback_data
        solution_key = call.data.split('_')[1]
        
        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ—à–µ–Ω–∏–µ
        success, reward, exp_gain, level_up = await solve_incident(
            user_id, incident_id, solution_key, solution_time
        )
        
        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤
        with SessionMaker() as session:
            player = session.query(Player).filter(Player.user_id == user_id).first()
            if player:
                if success:
                    player.successful_fixes += 1
                    # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø—Ä–∏ —É—Å–ø–µ—Ö–µ
                    player.reputation = min(100, player.reputation + 2)
                else:
                    player.failed_fixes += 1
                    # –°–Ω–∏–∂–∞–µ–º —Ä–µ–ø—É—Ç–∞—Ü–∏—é –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
                    player.reputation = max(0, player.reputation - 5)
                    
                    # –£–º–µ–Ω—å—à–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ –ø—Ä–∏ –Ω–µ—É–¥–∞—á–µ
                    await decrease_server_health(user_id, 5.0)
                
                session.commit()
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
        if success:
            await update_task_progress(user_id, "solve_incidents")
        
        if success:
            result_message = f"‚úÖ *–£—Å–ø–µ—Ö!* –ò–Ω—Ü–∏–¥–µ–Ω—Ç —Ä–µ—à–µ–Ω –∑–∞ {solution_time:.1f} —Å–µ–∫—É–Ω–¥!\n\n" \
                             f"üí∞ –ü–æ–ª—É—á–µ–Ω–æ: ${reward}\n" \
                             f"‚≠êÔ∏è –û–ø—ã—Ç: +{exp_gain}"
            
            if level_up:
                result_message += f"\n\nüéâ –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –Ω–æ–≤–æ–≥–æ —É—Ä–æ–≤–Ω—è!"
        else:
            result_message = f"‚ùå *–ù–µ—É–¥–∞—á–∞!* –í–∞—à–µ —Ä–µ—à–µ–Ω–∏–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ.\n\n" \
                             f"üí∞ –ü–æ—Ç–µ—Ä—è–Ω–æ: ${-reward}\n" \
                             f"‚≠êÔ∏è –û–ø—ã—Ç: +{exp_gain} (—É—á–∏–º—Å—è –Ω–∞ –æ—à–∏–±–∫–∞—Ö)\n\n" \
                             f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ —Å–Ω–∏–∑–∏–ª–æ—Å—å –Ω–∞ 5%.\n" \
                             f"–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞–º —Å—Ç–æ–∏—Ç —É–ª—É—á—à–∏—Ç—å –Ω–∞–≤—ã–∫–∏ –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø–æ–¥—Ö–æ–¥."
                
        await call.message.edit_text(
            text=call.message.text + f"\n\n{result_message}",
            parse_mode="Markdown"
        )
        
        # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        del user_data[user_id]
        
        await call.answer()
    else:
        await call.answer("–ò–Ω—Ü–∏–¥–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π—Ç–µ –Ω–æ–≤—ã–π.")

# –ù–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —Ä–µ—à–µ–Ω–∏–π
@incident_router.message(F.text == 'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞')
async def show_stats(message: Message):
    user_id = message.from_user.id
    
    with SessionMaker() as session:
        player = session.query(Player).filter(Player.user_id == user_id).first()
        
        if not player:
            await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
            return
        
        total_incidents = player.successful_fixes + player.failed_fixes
        success_rate = 0 if total_incidents == 0 else (player.successful_fixes / total_incidents) * 100
        
        await message.answer(
            f"üìä *–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ DevOps-–∏–Ω–∂–µ–Ω–µ—Ä–∞*\n\n"
            f"üñ• *–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤:* {player.server_health:.1f}%\n"
            f"üë®‚Äçüíª *–†–µ–ø—É—Ç–∞—Ü–∏—è:* {player.reputation}/100\n"
            f"‚úÖ *–£—Å–ø–µ—à–Ω–æ —Ä–µ—à–µ–Ω–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤:* {player.successful_fixes}\n"
            f"‚ùå *–ü—Ä–æ–≤–∞–ª–µ–Ω–Ω—ã—Ö –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤:* {player.failed_fixes}\n"
            f"üìà *–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞:* {success_rate:.1f}%\n\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –ø–æ–≤—ã—à–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏ –∏ —Ä–µ—à–∞—Ç—å –∏–Ω—Ü–∏–¥–µ–Ω—Ç—ã!",
            parse_mode="Markdown"
        )
