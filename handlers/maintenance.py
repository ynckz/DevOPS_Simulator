from aiogram import Router, F
from aiogram.types import Message, CallbackQuery

from services import get_player_profile, repair_server
from utils.keyboards import get_maintenance_keyboard
from services.daily_service import update_task_progress

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è
maintenance_router = Router()

@maintenance_router.message(F.text == 'üîß –û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ')
async def show_maintenance(message: Message):
    user_id = message.from_user.id
    player, _ = await get_player_profile(user_id)
    
    if not player:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π /start")
        return
    
    server_health = player.server_health
    health_status = "üü¢ –û—Ç–ª–∏—á–Ω–æ" if server_health > 90 else \
                   "üü° –•–æ—Ä–æ—à–æ" if server_health > 70 else \
                   "üü† –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ" if server_health > 50 else \
                   "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏"
    
    repair_cost = int((100 - server_health) * player.servers * 5)
    
    await message.answer(
        f"üîß *–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤*\n\n"
        f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {health_status} ({server_health:.1f}%)\n"
        f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {player.servers}\n\n"
        f"–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞: ${repair_cost}\n\n"
        f"–ù–∏–∑–∫–æ–µ –∑–¥–æ—Ä–æ–≤—å–µ —Å–µ—Ä–≤–µ—Ä–æ–≤ —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å —Å–±–æ–µ–≤ –∏ —Å–Ω–∏–∂–∞–µ—Ç\n"
        f"—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Ä–µ—à–µ–Ω–∏—è –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤.",
        parse_mode="Markdown",
        reply_markup=get_maintenance_keyboard(repair_cost)
    )

@maintenance_router.callback_query(F.data.startswith('repair_'))
async def handle_repair(call: CallbackQuery):
    user_id = call.from_user.id
    repair_amount = int(call.data.split('_')[1])  # repair_100, repair_50, repair_25
    
    success, new_health, cost = await repair_server(user_id, repair_amount)
    
    if success:
        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è
        await update_task_progress(user_id, "repair_servers", repair_amount)
        
        health_status = "üü¢ –û—Ç–ª–∏—á–Ω–æ" if new_health > 90 else \
                       "üü° –•–æ—Ä–æ—à–æ" if new_health > 70 else \
                       "üü† –£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ" if new_health > 50 else \
                       "üî¥ –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏"
        
        player, _ = await get_player_profile(user_id)
        repair_cost = int((100 - new_health) * player.servers * 5)
        
        await call.message.edit_text(
            f"üîß *–û–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤*\n\n"
            f"‚úÖ –†–µ–º–æ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!\n"
            f"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ: ${cost}\n\n"
            f"–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {health_status} ({new_health:.1f}%)\n"
            f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–µ—Ä–≤–µ—Ä–æ–≤: {player.servers}\n\n"
            f"–°—Ç–æ–∏–º–æ—Å—Ç—å –ø–æ–ª–Ω–æ–≥–æ —Ä–µ–º–æ–Ω—Ç–∞: ${repair_cost}",
            parse_mode="Markdown",
            reply_markup=get_maintenance_keyboard(repair_cost)
        )
        
        await call.answer("–†–µ–º–æ–Ω—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!")
    else:
        await call.answer(f"–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤! –ù–µ–æ–±—Ö–æ–¥–∏–º–æ ${cost}") 