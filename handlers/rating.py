from aiogram import Router, F
from aiogram.types import Message

from models import Player, SessionMaker

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞
rating_router = Router()

@rating_router.message(F.text == 'üìà –†–µ–π—Ç–∏–Ω–≥')
async def show_rating(message: Message):
    with SessionMaker() as session:
        # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–ø-10 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ —É—Ä–æ–≤–Ω—é
        top_players = session.query(
            Player.username, 
            Player.level, 
            Player.experience,
            Player.successful_fixes,
            Player.server_health
        ).order_by(
            Player.level.desc(), 
            Player.experience.desc()
        ).limit(10).all()
        
        if not top_players:
            await message.answer("–ü–æ–∫–∞ –Ω–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ä–µ–π—Ç–∏–Ω–≥–∞.")
            return
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏–¥–µ—Ä–æ–≤
        rating_text = "\n\n".join([
            f"{i+1}. *{player[0]}*\n"
            f"–£—Ä–æ–≤–µ–Ω—å: {player[1]}\n"
            f"–û–ø—ã—Ç: {player[2]}\n"
            f"–†–µ—à–µ–Ω–æ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤: {player[3]}\n"
            f"–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–æ–≤: {player[4]:.1f}%"
            for i, player in enumerate(top_players)
        ])
        
        await message.answer(
            f"üìà *–†–µ–π—Ç–∏–Ω–≥ –ª—É—á—à–∏—Ö DevOps-–∏–Ω–∂–µ–Ω–µ—Ä–æ–≤*\n\n"
            f"{rating_text}\n\n"
            f"–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ —É–ª—É—á—à–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏, —á—Ç–æ–±—ã –ø–æ–¥–Ω—è—Ç—å—Å—è –≤ —Ä–µ–π—Ç–∏–Ω–≥–µ!",
            parse_mode="Markdown"
        )